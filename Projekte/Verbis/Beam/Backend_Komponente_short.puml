@startuml

package routes <<Modules>> {
    class read << (M, #6A3100) Module>> {
    --
    + get_overview_day(db, customday: Option<String>)
    
    }
    class create << (M, #6A3100) Module>> {
    --
    + post_joinroom(db, entry_id: i32, user_name) 
    + post_joinrooms(db, room_id: i32, days: Vec<String>, user_name)
    }
    class delete << (M, #6A3100) Module>> {
    --
    + delete_participant(db, entry_id: i32)
    }
    package mod <<Modules>> {
        class BeamBackendConnector << (S, #FF7700) Struct>> {
            --
            + process_task(db: &DatabaseConnection)
        }
    }

}
package entities {
    class mrbs_area << (S, #FF7700) Struct>> {}
    class mrbs_room << (S, #FF7700) Struct>> {}
    class mrbs_entry << (S, #FF7700) Struct>> {}
    class mrbs_participants << (S, #FF7700) Struct>> {}
}

'' Verbindung 
BeamBackendConnector -- read: use
BeamBackendConnector -- create: use
BeamBackendConnector -- delete : use
read -- mrbs_area
read -- mrbs_room
read -- mrbs_entry
read -- mrbs_participants
create -- mrbs_participants
create -- mrbs_entry
delete -- mrbs_participants

@enduml